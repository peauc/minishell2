!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^	CC=		clang$/;"	m
CC	Makefile	/^	CC=		gcc$/;"	m
CFLAGS	Makefile	/^	CFLAGS=		$(HEAD) -W -Wall -Wextra -ansi -pedantic -g -D DEBUG$/;"	m
CFLAGS	Makefile	/^	CFLAGS=		$(HEAD) -W -Wall -Wextra -ansi -pedantic$/;"	m
DEBUG	Makefile	/^DEBUG=	yes$/;"	m
HEAD	Makefile	/^HEAD=	-I inc\/$/;"	m
NAME	Makefile	/^NAME=	mysh$/;"	m
OBJ	Makefile	/^OBJ=	$(addprefix src\/, $(SRC:.c=.o))$/;"	m
RM	Makefile	/^RM=	rm -f$/;"	m
SRC	Makefile	/^SRC=	arlen.c			\\$/;"	m
_MYSH_	inc/mysh.h	12;"	d
add_to_back	src/linked_list.c	/^t_args		*add_to_back(t_args *args, char *line)$/;"	f
add_to_struct	src/get_pipes.c	/^static int	add_to_struct(t_args *args)$/;"	f	file:
args	inc/mysh.h	/^  char		*args;$/;"	m	struct:s_args
arlen	src/arlen.c	/^int	arlen(char **tab)$/;"	f
calc	src/calc.c	/^int		calc(t_args *args, char **ae)$/;"	f
command	inc/mysh.h	/^  char		**command;$/;"	m	struct:s_pipes
concatenate_path	src/path_managing.c	/^char	**concatenate_path(char *command, char **path)$/;"	f
copy_env	src/copy_env.c	/^char	**copy_env(char **ae)$/;"	f
core	src/core.c	/^int	core(t_args *args, char **ae)$/;"	f
count_pipes	src/count_in_wordtab.c	/^int	count_pipes(char *tab)$/;"	f
count_word	src/wordtab.c	/^int	count_word(char *str, int target)$/;"	f
create_argument_list	src/linked_list.c	/^t_args	*create_argument_list()$/;"	f
cut_by_semicolon	src/cut_line.c	/^int	cut_by_semicolon(t_args *arguments, char *line)$/;"	f
epur_str	src/epur.c	/^char	*epur_str(char *str)$/;"	f
epur_tab	src/epur.c	/^char	**epur_tab(char **tab)$/;"	f
execute_and_pipe	src/calc.c	/^int		execute_and_pipe(int **fdp, char **pipes, char **ae, int i)$/;"	f
execute_first	src/execute_pipes.c	/^int	execute_first(char **command, char **env, int i, int **fdp)$/;"	f
execute_last	src/execute_pipes.c	/^int	execute_last(char **command, char **env, int i, int **fdp)$/;"	f
execute_middle	src/execute_pipes.c	/^int	execute_middle(char **command, char **env, int i, int **fdp)$/;"	f
fork_it	src/calc.c	/^int		 fork_it(int **fdp, char **pipes, int i, char **path, char **ae)$/;"	f
free_all	src/free_all.c	/^void	free_all(char **env, char *line)$/;"	f
free_args	src/free_all.c	/^void            free_args(t_args *args)$/;"	f
free_tab	src/free_all.c	/^void	free_tab(char **tab)$/;"	f
get_lenght	src/wordtab.c	/^int	get_lenght(char *str, int target)$/;"	f
get_path	src/path_managing.c	/^char	**get_path(char **ae)$/;"	f
get_pipes	src/get_pipes.c	/^int		get_pipes(t_args *args)$/;"	f
main	src/main.c	/^int	main(int ac, char **av, char **ae)$/;"	f
make_pipe_tab	src/prepare_pipe.c	/^int             **make_pipe_tab(t_args *args)$/;"	f
malloc_error	src/malloc_error.c	/^int	malloc_error()$/;"	f
minishell	src/minishell.c	/^int		minishell(char **ae)$/;"	f
my_strcat	src/my_strcat.c	/^void	my_strcat(char *dest, char *src)$/;"	f
my_strcpy	src/my_strcpy.c	/^void	my_strcpy(char *dest, char *src)$/;"	f
my_strcpy_to_target	src/wordtab.c	/^int	my_strcpy_to_target(char *dest, char *src, char target)$/;"	f
my_strdup	src/my_strdup.c	/^char	*my_strdup(char *str)$/;"	f
my_strlen	src/my_strlen.c	/^int	my_strlen(char *str)$/;"	f
my_strncmp	src/my_strncmp.c	/^int	my_strncmp(char *str1, char *str2, int nb)$/;"	f
next	inc/mysh.h	/^  struct s_args	*next;$/;"	m	struct:s_args	typeref:struct:s_args::s_args
parsing	src/parsing.c	/^t_args	*parsing(char *line)$/;"	f
pathed_args	inc/mysh.h	/^  char		**pathed_args;$/;"	m	struct:s_args
pipes	inc/mysh.h	/^  t_pipes	pipes;$/;"	m	struct:s_args
prepare_it	src/calc.c	/^char		**prepare_it(char *command, char **path)$/;"	f
read_it	src/read.c	/^char		*read_it()$/;"	f
s_args	inc/mysh.h	/^typedef struct	s_args$/;"	s
s_pipes	inc/mysh.h	/^typedef struct	s_pipes$/;"	s
showlist	src/linked_list.c	/^void		showlist(t_args *args)$/;"	f
showtab	src/showtab.c	/^void	showtab(char **ae)$/;"	f
simple_exec	src/simple_exec.c	/^int	simple_exec(char **pipe, char **ae)$/;"	f
str_wordtab	src/wordtab.c	/^char	**str_wordtab(char *str, char target)$/;"	f
t_args	inc/mysh.h	/^}		t_args;$/;"	t	typeref:struct:s_args
t_pipes	inc/mysh.h	/^}		t_pipes;$/;"	t	typeref:struct:s_pipes
test_access	src/calc.c	/^char		*test_access(char *command, char **path)$/;"	f
werror	src/werror.c	/^void	werror(char *str)$/;"	f
